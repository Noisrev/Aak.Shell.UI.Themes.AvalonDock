<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:AvalonDock.Themes.VisualStudio.Controls.Attach"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:controlz="urn:controlzex"
    xmlns:ctrls="clr-namespace:AvalonDock.Themes.VisualStudio.Controls"
    xmlns:reskeys="clr-namespace:AvalonDock.Themes.VisualStudio.Themes"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/AvalonDock.Themes.VisualStudio;component/Styles/DockTargetButton.xaml" />
        <ResourceDictionary Source="/AvalonDock.Themes.VisualStudio;component/Styles/MenuStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <PathGeometry x:Key="Path_PinAutoHide" Figures="M 128,17.475L 130.842,17.475L 130.842,2.91001L 130.842,0.608195L 130.842,0.000223796L 139.593,0.000223796L 145.003,0.000223796L 145.424,0.000223796L 145.424,17.475L 148.413,17.475L 148.413,20.3848L 139.684,20.3848L 139.684,32.0003L 136.752,32.0003L 136.752,20.3848L 128,20.3848L 128,17.475 Z M 133.774,2.91007L 133.774,17.475L 139.593,17.475L 139.593,2.91007L 133.774,2.91007 Z" />
    <PathGeometry x:Key="Path_PinClose" Figures="M 0,2.0345e-005L 7.62109,2.0345e-005L 19.2627,12.0551L 30.9043,2.0345e-005L 38.5241,2.0345e-005L 23.0726,16.0003L 38.5234,32L 30.9023,32L 19.2621,19.9462L 7.62177,32L 0.00195313,32L 15.4521,16.001L 0,2.0345e-005 Z" />
    <PathGeometry x:Key="Path_PinRestore" Figures="M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
    <PathGeometry x:Key="Path_PinMaximize" Figures="M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 0,3z" />

    <PathGeometry x:Key="Path_HorizontalTabGroup" Figures="M 2.53856,7.38456L 2.53856,12.3846L 31.9231,12.3846L 31.9231,7.38456L 2.53856,7.38456 Z M 0,0.000162761L 34.3846,0.000162761L 34.3846,14.7694L 0,14.7694L 0,0.000162761 Z M 2.53861,24.6155L 2.53861,29.6155L 31.9232,29.6155L 31.9232,24.6155L 2.53861,24.6155 Z M 5.00801e-005,17.2309L 34.3846,17.2309L 34.3846,32.0001L 5.00801e-005,32.0001L 5.00801e-005,17.2309 Z " />
    <PathGeometry x:Key="Path_VerticalTabGroup" Figures="M 64,0.000223796L 101.319,0.000223796L 101.319,32.0002L 64,32.0002L 64,0.000223796 Z M 66.6804,8.03752L 66.6804,29.3154L 79.896,29.3154L 79.896,8.03752L 66.6804,8.03752 Z M 85.4232,8.03746L 85.4232,29.3154L 98.6388,29.3154L 98.6388,8.03746L 85.4232,8.03746 Z " />
    <PathGeometry x:Key="Path_DockPaneLargeEmpty" Figures="M 192,19.4161L 192,12.5843L 202.892,12.5843L 204.584,10.8924L 204.584,0.000223796L 211.416,0.000223796L 211.416,10.8924L 213.108,12.5843L 224,12.5843L 224,19.4161L 213.108,19.4161L 211.416,21.108L 211.416,32.0002L 204.584,32.0002L 204.584,21.108L 202.892,19.4161L 192,19.4161 Z " />
    <PathGeometry x:Key="Path_DockPaneEmpty" Figures="M 266.388,0.000223796L 277.612,0.000223796L 277.612,7.60856L 280.392,10.3883L 288,10.3883L 288,21.6122L 280.392,21.6122L 277.612,24.3919L 277.612,32.0002L 266.388,32.0002L 266.388,24.3919L 263.608,21.6122L 256,21.6122L 256,10.3883L 263.608,10.3883L 266.388,7.60856L 266.388,0.000223796 Z " />
    <PathGeometry x:Key="Path_PinMenu" Figures="M 352.041,32.0005L 320,0.000162761L 384,0.000162761L 352.041,32.0005 Z " />
    <PathGeometry x:Key="Path_PinLocked" Figures="M 1.77411,12.4183L 23.0627,12.4183C 24.0423,12.4183 24.8366,13.2126 24.8366,14.1925L 24.8366,30.1588C 24.8366,31.1386 24.0423,31.9329 23.0627,31.9329L 1.77411,31.9329C 0.794312,31.9329 0,31.1386 0,30.1588L 0,14.1925C 0,13.2126 0.794312,12.4183 1.77411,12.4183 Z M 14.5149,22.095C 15.0955,21.6111 15.4826,20.9337 15.4826,20.1595C 15.4826,18.805 14.4182,17.7404 13.0635,17.7404C 11.7087,17.7404 10.6442,18.8048 10.6442,20.1595C 10.6442,20.9337 11.0313,21.6111 11.6119,22.095L 11.6119,24.0302C 11.6119,24.8044 12.2893,25.4818 13.0633,25.4818C 13.8375,25.4818 14.5149,24.8044 14.5149,24.0302L 14.5149,22.095 Z M 20.9659,12.4183L 18.063,12.4183L 18.063,8.70894C 18.063,5.51565 15.4504,2.90304 12.257,2.90304C 9.06372,2.90304 6.45111,5.51565 6.45111,8.70894L 6.45111,12.4183L 3.54816,12.4183L 3.54816,8.70894C 3.54816,3.87069 7.41882,2.03401e-005 12.257,2.03401e-005C 17.0955,2.03401e-005 20.9659,3.87069 20.9659,8.70894L 20.9659,12.4183 Z " />

    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <Style x:Key="DropDownControlArea" TargetType="avalonDockControls:DropDownControlArea" />

    <Style BasedOn="{StaticResource {x:Type ContextMenu}}" TargetType="{x:Type avalonDockControls:ContextMenuEx}" />
    <Style x:Key="AvalonDockToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor31}" />
                <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor10}" />-->
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor31}" />
                <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor10}" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AvalonDockButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  For Tabitem  -->
    <Thickness
        x:Key="LeftStaticBorderThickness"
        Bottom="1"
        Left="1"
        Right="0"
        Top="1" />
    <Thickness
        x:Key="LeftStaticInBorderThickness"
        Bottom="0"
        Left="1"
        Right="0"
        Top="0" />
    <Thickness
        x:Key="BottomStaticBorderThickness"
        Bottom="1"
        Left="1"
        Right="1"
        Top="0" />
    <Thickness
        x:Key="BottomStaticInBorderThickness"
        Bottom="1"
        Left="0"
        Right="0"
        Top="0" />
    <Thickness
        x:Key="RightStaticBorderThickness"
        Bottom="1"
        Left="0"
        Right="1"
        Top="1" />
    <Thickness
        x:Key="RightStaticInBorderThickness"
        Bottom="0"
        Left="0"
        Right="1"
        Top="0" />
    <Thickness
        x:Key="TopStaticBorderThickness"
        Bottom="0"
        Left="1"
        Right="1"
        Top="1" />
    <Thickness
        x:Key="TopStaticInBorderThickness"
        Bottom="0"
        Left="0"
        Right="0"
        Top="1" />

    <Thickness
        x:Key="LeftSelectedInBorderThickness"
        Bottom="0"
        Left="2"
        Right="0"
        Top="0" />
    <Thickness
        x:Key="LeftSelectedMainBorderMargin"
        Bottom="0"
        Left="0"
        Right="-1"
        Top="0" />
    <Thickness
        x:Key="BottomSelectedInBorderThickness"
        Bottom="2"
        Left="0"
        Right="0"
        Top="0" />
    <Thickness
        x:Key="BottomSelectedMainBorderMargin"
        Bottom="0"
        Left="0"
        Right="0"
        Top="-1" />
    <Thickness
        x:Key="RightSelectedInBorderThickness"
        Bottom="0"
        Left="0"
        Right="2"
        Top="0" />
    <Thickness
        x:Key="RightSelectedMainBorderMargin"
        Bottom="0"
        Left="-1"
        Right="0"
        Top="0" />
    <Thickness
        x:Key="TopSelectedInBorderThickness"
        Bottom="0"
        Left="0"
        Right="0"
        Top="2" />
    <Thickness
        x:Key="TopSelectedMainBorderMargin"
        Bottom="-1"
        Left="0"
        Right="0"
        Top="0" />

    <Thickness
        x:Key="TabItemMainBorderStaticMagrin"
        Bottom="0"
        Left="0"
        Right="0"
        Top="0" />
    <!--  End  -->

    <!--  AnchorablePaneControlStyle  -->
    <Style x:Key="AvalonDockAnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Margin="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Background" Value="{DynamicResource TabItemStaticBackground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource TabItemStaticBorder}" />
                    <Setter Property="Foreground" Value="{DynamicResource TabItemStaticForeground}" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="6,3" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Border
                                        x:Name="mainBorder"
                                        Margin="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                                        <Border x:Name="innerBorder" BorderBrush="{DynamicResource TabItemStaticInBorder}" />
                                    </Border>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header"
                                        Focusable="False"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        TextElement.Foreground="{DynamicResource TabItemForeground}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabItemMouseOverForeground}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabItemDisabledForeground}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TabItemSelectedForeground}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource TabItemMouseOverInBorder}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticInBorderThickness}" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="{DynamicResource TabItemMainBorderStaticMagrin}" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItemMouseOverBackground}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItemMouseOverBorder}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticBorderThickness}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource TabItemDisabledInBorder}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticInBorderThickness}" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="{DynamicResource TabItemMainBorderStaticMagrin}" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItemDisabledBackground}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItemDisabledBorder}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticBorderThickness}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticInBorderThickness}" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="{DynamicResource TabItemMainBorderStaticMagrin}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticBorderThickness}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource TabItemSelectedInBorder}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="{DynamicResource BottomSelectedInBorderThickness}" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="{DynamicResource BottomSelectedMainBorderMargin}" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItemSelectedBackground}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItemSelectedBorder}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="{DynamicResource BottomStaticBorderThickness}" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type LayoutAnchorablePaneControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AvalonDockAnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel
                        MinWidth="6"
                        MinHeight="6"
                        Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={avalonDockConverters:AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDockAnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDockAnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border
            x:Name="MainBorder"
            Margin="0,0,12,0"
            Padding="0,6,0,4"
            Background="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabDefaultBackground}}"
            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabDefaultBorder}}"
            BorderThickness="0,0,0,6"
            TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabDefaultText}}"
            TextOptions.TextFormattingMode="Display">
            <ContentPresenter
                Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter TargetName="MainBorder" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="MainBorder" Property="Padding" Value="0,3,0,7" />
            </Trigger>
            <Trigger Property="Side" Value="Top">
                <Setter TargetName="MainBorder" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="MainBorder" Property="Padding" Value="0,3,0,7" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabHoveredBackground}}" />
                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabHoveredBorder}}" />
                <Setter TargetName="MainBorder" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.AutoHideTabHoveredText}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer">
                        <!--
                            Outmost Outter 4 overlay buttons that are displayed at border of MainWindow
                            when user drags tool window over another tool window or document and the
                            AvalonDock air space contains additional document(s) and tool windows (s).
                        -->
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <ctrls:DockTargetButton
                                x:Name="PART_DockingManagerDropTargetLeft"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsOutSide="True"
                                TargetDock="DockLeft" />

                            <ctrls:DockTargetButton
                                x:Name="PART_DockingManagerDropTargetRight"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsOutSide="True"
                                TargetDock="DockRight" />

                            <ctrls:DockTargetButton
                                x:Name="PART_DockingManagerDropTargetBottom"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsOutSide="True"
                                TargetDock="DockBottom" />

                            <ctrls:DockTargetButton
                                x:Name="PART_DockingManagerDropTargetTop"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsOutSide="True"
                                TargetDock="DockBottom" />
                        </Grid>

                        <!--
                            Is displayed as center cross with a max of 5 buttons when a toolwindow is
                            dragged over another tool window
                        -->
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <!--  Gray Star Background  -->
                            <Path
                                Height="112"
                                Data="{DynamicResource Path_DockPaneEmpty}"
                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->

                                <ctrls:DockTargetButton
                                    x:Name="PART_AnchorablePaneDropTargetTop"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockTop" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_AnchorablePaneDropTargetRight"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockRight" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_AnchorablePaneDropTargetBottom"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockBottom" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_AnchorablePaneDropTargetLeft"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockLeft" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_AnchorablePaneDropTargetInto"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="Center" />
                            </Grid>
                        </Grid>

                        <!--  Is displayed as center cross with a max of 5 buttons when documents are dragged over the document container.  -->
                        <Grid x:Name="PART_DocumentPaneDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
                                Height="112"
                                Data="{DynamicResource Path_DockPaneEmpty}"
                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />

                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetTop"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitTop" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetRight"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitRight" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetBottom"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitBottom" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetLeft"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitLeft" />

                                <!--  Center button of star shapped control  -->

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetInto"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="Center" />
                            </Grid>
                        </Grid>

                        <!--  Center star with a max of 9 buttons shown when tool window is dragged of document container  -->
                        <Grid x:Name="PART_DocumentPaneFullDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
                                Width="184"
                                Data="{DynamicResource Path_DockPaneLargeEmpty}"
                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneFullDropTargetTop"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitTop" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneFullDropTargetRight"
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitRight" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneFullDropTargetBottom"
                                    Grid.Row="3"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitBottom" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneFullDropTargetLeft"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="SplitLeft" />
                                <!--  Center button of star shapped control  -->
                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneFullDropTargetInto"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="Center" />

                                <!--  Outer 4 buttons of star shapped control  -->
                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockTop" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
                                    Grid.Row="2"
                                    Grid.Column="4"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockRight" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockBottom" />

                                <ctrls:DockTargetButton
                                    x:Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    TargetDock="DockLeft" />
                            </Grid>
                        </Grid>
                        <!--
                            Drop target rectangle that is displayed before a document or tool window
                            is dropped into a drop target location
                        -->
                        <Path
                            x:Name="PART_PreviewBox"
                            Fill="{DynamicResource {x:Static reskeys:ResourceKeys.PreviewBoxBackgroundBrushKey}}"
                            SnapsToDevicePixels="True"
                            Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.PreviewBoxBorderBrushKey}}"
                            StrokeThickness="5"
                            UseLayoutRounding="True"
                            Visibility="Hidden" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AvalonDockDocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAnchorableHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockDocumentTitleTemplate">
        <TextBlock
            VerticalAlignment="Center"
            Text="{Binding Title}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockAnchorableTitleTemplate">
        <TextBlock
            VerticalAlignment="Center"
            Text="{Binding Title}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDockIconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AvalonDockAnchorableContextMenu">
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem
            Command="{Binding Path=HideCommand}"
            Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="AvalonDockDocumentContextMenu">
        <MenuItem
            Command="{Binding Path=CloseCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_Close}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=CloseAllCommand}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAll}" />
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" />
        <MenuItem
            Command="{Binding Path=NewHorizontalTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource Path_HorizontalTabGroup}"
                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabMenuItemGlyph}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            Command="{Binding Path=NewVerticalTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource Path_VerticalTabGroup}"
                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabMenuItemGlyph}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            Command="{Binding Path=MoveToNextTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem
            Command="{Binding Path=MoveToPreviousTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <!--  DockingManager  -->
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.Background}}" />
        <Setter Property="DocumentPaneControlStyle" Value="{DynamicResource AvalonDockDocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{DynamicResource AvalonDockAnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{DynamicResource AvalonDockAnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{DynamicResource AvalonDockAnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{DynamicResource AvalonDockAnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{DynamicResource AvalonDockDocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{DynamicResource AvalonDockAnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{DynamicResource AvalonDockDocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{DynamicResource AvalonDockAnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu" Value="{DynamicResource AvalonDockAnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu" Value="{DynamicResource AvalonDockDocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{DynamicResource AvalonDockDocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{DynamicResource AvalonDockIconContentTemplate}" />
        <Setter Property="GridSplitterWidth" Value="6" />
        <Setter Property="GridSplitterHeight" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                Content="{TemplateBinding LayoutRootPanel}" />
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="2"
                                Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="0"
                                Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter
                                Grid.Row="0"
                                Grid.Column="1"
                                Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter
                                Grid.Row="2"
                                Grid.Column="1"
                                Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter
                                x:Name="PART_AutoHideArea"
                                Grid.Row="1"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Content="{TemplateBinding AutoHideWindow}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  LayoutGridResizerControl  -->
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.Background}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{DynamicResource {x:Static reskeys:ResourceKeys.Background}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <avalonDockControls:DropDownControlArea
                        DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                        DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource DropDownControlArea}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                                <avalonDockControls:DropDownControlArea
                                    Grid.Column="0"
                                    DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border
                        x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                        BorderThickness="1,0,1,1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header">
                                <avalonDockControls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter
                                Grid.Row="1"
                                Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                FlowDirection="{TemplateBinding FlowDirection}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--
                            Hide the title if the control is directly hosted in floating window
                            The floating window control will show the title if there is only one control to host
                            without any other LayoutAnchorableControl
                        -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--
                                Also hide the title, if model cannot be bound which can happen when using virtualization
                                See Issue #148 Drop Down Menu for LayoutAnchorables is not correct with Virtualization
                            -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                        <!--  Correct BorderThickness for all types of layouts LayoutAnchorableControls  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="1" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="1" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="BorderThickness" Value="0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingToolWindowBackground}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="attach:WindowChromeAttach.IsEnabled" Value="True" />
        <Setter Property="attach:GlowWindowAttach.GlowMode" Value="ControlzEx" />
        <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingToolWindowBorderInactive}}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="OwnedByDockingManagerWindow" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border
                            x:Name="WindowBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="21" />
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    x:Name="Header"
                                    Padding="2,2,3,3"
                                    controlz:NonClientControlProperties.HitTestResult="CAPTION"
                                    Background="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveBackground}}"
                                    TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveText}}">
                                    <Grid UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Rectangle
                                            x:Name="DragHandleGeometryPlaceholder"
                                            Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveGrip}}"
                                            Visibility="Collapsed" />

                                        <DockPanel>
                                            <Border
                                                Padding="2,0,4,0"
                                                HorizontalAlignment="Left"
                                                Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                                <avalonDockControls:DropDownControlArea
                                                    DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                    DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Style="{DynamicResource DropDownControlArea}">
                                                    <ContentPresenter
                                                        Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                                </avalonDockControls:DropDownControlArea>
                                            </Border>

                                            <Rectangle
                                                x:Name="DragHandleTexture"
                                                Height="5"
                                                Margin="4,0,4,0"
                                                VerticalAlignment="Center"
                                                RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                UseLayoutRounding="True">
                                                <Rectangle.Fill>
                                                    <DrawingBrush
                                                        TileMode="Tile"
                                                        Viewbox="0,0,4,4"
                                                        ViewboxUnits="Absolute"
                                                        Viewport="0,0,4,4"
                                                        ViewportUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <GeometryDrawing Brush="{Binding Fill, ElementName=DragHandleGeometryPlaceholder, Converter={StaticResource NullToDoNothingConverter}}">
                                                                <GeometryDrawing.Geometry>
                                                                    <GeometryGroup>
                                                                        <GeometryGroup.Children>
                                                                            <RectangleGeometry Rect="0,0,1,1" />
                                                                            <RectangleGeometry Rect="2,2,1,1" />
                                                                        </GeometryGroup.Children>
                                                                    </GeometryGroup>
                                                                </GeometryDrawing.Geometry>
                                                            </GeometryDrawing>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </DockPanel>

                                        <ctrls:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            Grid.Column="1"
                                            Width="15"
                                            Height="15"
                                            Margin="1,1,1,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            controlz:NonClientControlProperties.ClickStrategy="MouseEvent"
                                            controlz:NonClientControlProperties.HitTestResult="SYSMENU"
                                            controlz:WindowChrome.IsHitTestVisibleInChrome="True"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockToolButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_ImgPinMenu"
                                                Width="8"
                                                Height="8"
                                                Margin="0,0,0,1"
                                                Data="{DynamicResource Path_PinMenu}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                                Stretch="Uniform" />
                                        </ctrls:DropDownButton>

                                        <Button
                                            x:Name="PART_PinMaximize"
                                            Grid.Column="2"
                                            Width="15"
                                            Height="15"
                                            Margin="0,1,1,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                            controlz:NonClientControlProperties.HitTestResult="MAXBUTTON"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinMaximize_Image"
                                                Width="9"
                                                Height="9"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource Path_PinMaximize}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinRestore"
                                            Grid.Column="2"
                                            Width="15"
                                            Height="15"
                                            Margin="0,1,1,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                            controlz:NonClientControlProperties.HitTestResult="MAXBUTTON"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinRestore_Image"
                                                Width="10"
                                                Height="10"
                                                Margin="1,1,0,0"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource Path_PinRestore}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinClose"
                                            Grid.Column="3"
                                            Width="15"
                                            Height="15"
                                            Margin="0,1,1,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                            controlz:NonClientControlProperties.HitTestResult="CLOSE"
                                            Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinClose_Image"
                                                Width="10"
                                                Height="10"
                                                Margin="1,0,0,1"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource Path_PinClose}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                                Stretch="Uniform" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveBackground}}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveText}}" />
                            <Setter TargetName="DragHandleGeometryPlaceholder" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveGrip}}" />
                            <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingToolWindowBorder}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_PinClose" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_PinClose" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}" />
                        </DataTrigger>
                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(controlz:NonClientControlProperties.IsNCMouseOver), ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBackground}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBorder}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBackground}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBorder}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBackground}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactivePressedGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true">
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                        </DataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsChecked, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabBackground}}" />
        <Setter Property="AnchorableStyle">
            <Setter.Value>
                <Style TargetType="avalonDockControls:LayoutAnchorableControl">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvalonDockThemeVs2013NavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        RadiusX="2"
                        RadiusY="2"
                        Stroke="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvalonDockThemeVs2013NavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource AvalonDockThemeVs2013NavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="AutomationProperties.Name" Value="{Binding LayoutElement.Title}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border x:Name="InnerBorder" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    x:Name="UpperHighlight"
                                    Fill="#75FFFFFF"
                                    Visibility="Collapsed" />
                                <ContentPresenter
                                    Grid.RowSpan="2"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowSelectedBackground}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowSelectedText}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="16"
                    CornerRadius="4"
                    GlassFrameThickness="0"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Border
                        x:Name="WindowBorder"
                        Margin="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="54" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        Source="{Binding SelectedDocument.LayoutElement.IconSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToDoNothingConverter}}"
                                        Stretch="None"
                                        Visibility="{Binding SelectedDocument.LayoutElement.IconSource, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
                                    <TextBlock
                                        x:Name="selectedElementTitle"
                                        Grid.Column="1"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        FontWeight="Bold"
                                        Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}"
                                        Text="{Binding SelectedDocument.LayoutElement.Title, RelativeSource={RelativeSource TemplatedParent}}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>
                                <TextBlock
                                    x:Name="selectedElementDescription"
                                    Grid.Row="1"
                                    Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}"
                                    Text="{Binding SelectedDocument.LayoutElement.Description}"
                                    TextTrimming="CharacterEllipsis" />
                            </Grid>
                            <Border
                                Grid.Row="1"
                                MinHeight="200"
                                Background="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowBackground}}">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Margin="0,3,0,4"
                                            FontWeight="Bold"
                                            Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}"
                                            Text="{x:Static avalonDockProperties:Resources.Active_ToolWindows}" />
                                        <ListBox
                                            x:Name="PART_AnchorableListBox"
                                            Grid.Row="1"
                                            MaxHeight="400"
                                            AutomationProperties.Name="{x:Static avalonDockProperties:Resources.Active_ToolWindows}"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            ItemContainerStyle="{StaticResource AvalonDockThemeVs2013NavigatorWindowListBoxItemStyle}"
                                            ItemsSource="{Binding Anchorables}"
                                            SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="16" />
                                                            <ColumnDefinition Width="150" />
                                                        </Grid.ColumnDefinitions>
                                                        <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None" />
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="4,0,0,0"
                                                            Text="{Binding LayoutElement.Title}"
                                                            TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                    <Grid Grid.Column="1" Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Margin="0,3,0,4"
                                            FontWeight="Bold"
                                            Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}"
                                            Text="{x:Static avalonDockProperties:Resources.Active_Files}" />
                                        <ListBox
                                            x:Name="PART_DocumentListBox"
                                            Grid.Row="1"
                                            MaxHeight="400"
                                            AutomationProperties.Name="{x:Static avalonDockProperties:Resources.Active_Files}"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            ItemContainerStyle="{StaticResource AvalonDockThemeVs2013NavigatorWindowListBoxItemStyle}"
                                            ItemsSource="{Binding Documents}"
                                            SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="16" />
                                                            <ColumnDefinition Width="150" />
                                                        </Grid.ColumnDefinitions>
                                                        <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None" />
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="4,0,0,0"
                                                            Text="{Binding LayoutElement.Title}"
                                                            TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>
                                    </Grid>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="2" Margin="5">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NavigatorWindowForeground}}"
                                    Text="{Binding SelectedDocument.LayoutElement.ToolTip, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedDocument" Value="{x:Null}">
                            <Setter TargetName="selectedElementTitle" Property="Text" Value="{Binding SelectedAnchorable.LayoutElement.Title}" />
                            <Setter TargetName="selectedElementDescription" Property="Text" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>