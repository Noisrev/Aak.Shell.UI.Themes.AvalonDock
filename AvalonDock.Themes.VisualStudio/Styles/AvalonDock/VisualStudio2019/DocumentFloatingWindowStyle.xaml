<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:AvalonDock.Themes.VisualStudio.Controls.Attach"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:controlz="urn:controlzex"
    xmlns:reskeys="clr-namespace:AvalonDock.Themes.VisualStudio.Themes"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock">

    <PathGeometry x:Key="FloatingDocClose" Figures="M 0,2.0345e-005L 7.62109,2.0345e-005L 19.2627,12.0551L 30.9043,2.0345e-005L 38.5241,2.0345e-005L 23.0726,16.0003L 38.5234,32L 30.9023,32L 19.2621,19.9462L 7.62177,32L 0.00195313,32L 15.4521,16.001L 0,2.0345e-005 Z" />
    <PathGeometry x:Key="FloatingDocRestore" Figures="M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
    <PathGeometry x:Key="FloatingDocMaximize" Figures="M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 0,3" />

    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBackground}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="attach:GlowWindowAttach.GlowMode" Value="ControlzEx" />
        <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBorder}}" />
        <Setter Property="attach:WindowChromeAttach.IsEnabled" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="DocumentFloatingWindowSystemButton" TargetType="{x:Type Button}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Width" Value="34" />
                            <Setter Property="Height" Value="26" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyph}}" />
                            <Setter Property="controlz:NonClientControlProperties.ClickStrategy" Value="AutomationPeer" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter
                                                x:Name="contentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="controlz:NonClientControlProperties.IsNCMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundHover}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderHover}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphHover}}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundHover}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderHover}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphHover}}" />
                                            </Trigger>
                                            <Trigger Property="controlz:NonClientControlProperties.IsNCPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundPressed}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderPressed}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphPressed}}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundPressed}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderPressed}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphPressed}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="WindowBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="Header"
                                controlz:NonClientControlProperties.HitTestResult="CAPTION"
                                Background="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarBackground}}"
                                TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarTextActive}}">
                                <Grid UseLayoutRounding="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                        x:Name="HeaderContent"
                                        Margin="12,4,12,0"
                                        Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                        TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarTextActive}}" />
                                    <Button
                                        x:Name="PART_PinMaximize"
                                        Grid.Column="1"
                                        controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                        controlz:NonClientControlProperties.HitTestResult="MAXBUTTON"
                                        Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource DocumentFloatingWindowSystemButton}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}">
                                        <Path
                                            x:Name="PART_PinMaximize_Image"
                                            Width="9"
                                            Height="9"
                                            Data="{DynamicResource FloatingDocMaximize}"
                                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                            RenderOptions.EdgeMode="Aliased"
                                            Stretch="Uniform" />
                                    </Button>
                                    <Button
                                        x:Name="PART_PinRestore"
                                        Grid.Column="1"
                                        controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                        controlz:NonClientControlProperties.HitTestResult="MAXBUTTON"
                                        Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource DocumentFloatingWindowSystemButton}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <Path
                                            x:Name="PART_PinRestore_Image"
                                            Width="10"
                                            Height="10"
                                            Data="{DynamicResource FloatingDocRestore}"
                                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                            Stretch="Uniform" />
                                    </Button>
                                    <Button
                                        x:Name="PART_PinClose"
                                        Grid.Column="2"
                                        controlz:NonClientControlProperties.ClickStrategy="AutomationPeer"
                                        controlz:NonClientControlProperties.HitTestResult="CLOSE"
                                        Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource DocumentFloatingWindowSystemButton}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <Path
                                            x:Name="PART_PinClose_Image"
                                            Width="10"
                                            Height="10"
                                            Data="{DynamicResource FloatingDocClose}"
                                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                            Stretch="Uniform" />
                                    </Button>
                                </Grid>
                            </Border>
                            <ContentPresenter
                                Grid.Row="2"
                                Margin="6"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Show Header Bar (Window Title and Restore/Maximize/Minimize buttons with highlighting color if this IsActive)  -->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Header" Property="Padding" Value="0,0,0,6" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="False">
                            <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarText}}" />
                            <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBorderInactive}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>