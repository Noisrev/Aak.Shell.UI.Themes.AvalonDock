<!--
    ************************************************************************
    AvalonDock
    
    Copyright (C) 2007-2013 Xceed Software Inc.
    
    This program is provided to you under the terms of the Microsoft Public
    License (Ms-PL) as published at https://opensource.org/licenses/MS-PL
    ************************************************************************
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:AvalonDock.Themes.VisualStudio.Controls.Attach"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:controlz="urn:controlzex"
    xmlns:ctrls="clr-namespace:AvalonDock.Themes.VisualStudio.Controls"
    xmlns:reskeys="clr-namespace:AvalonDock.Themes.VisualStudio.Themes"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/AvalonDock.Themes.VisualStudio;component/Themes/SharedResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <PathGeometry x:Key="PinDocMenu" Figures="M 352.041,32.0005L 320,0.000162761L 384,0.000162761L 352.041,32.0005 Z " />
    <PathGeometry x:Key="FloatingDocClose" Figures="M7.116 8l-4.558 4.558.884.884L8 8.884l4.558 4.558.884-.884L8.884 8l4.558-4.558-.884-.884L8 7.116 3.442 2.558l-.884.884L7.116 8z" />
    <PathGeometry x:Key="FloatingDocRestore" Figures="M3 5v9h9V5H3zm8 8H4V6h7v7z M5 5h1V4h7v7h-1v1h2V3H5v2z" />
    <PathGeometry x:Key="FloatingDocMaximize" Figures="M3 3v10h10V3H3zm9 9H4V4h8v8z" />

    <!--  DocumentPaneControlStyle  -->
    <Style x:Key="AvalonDockDocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabBackground}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid
                            Grid.Row="0"
                            Margin="1,0"
                            Panel.ZIndex="1"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="MainBorder"
                                Grid.ColumnSpan="2"
                                BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabStateLineActive}}"
                                BorderThickness="0,0,0,2" />
                            <avalonDockControls:DocumentPaneTabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="0,0,0,2"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                            <ctrls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="0,0,0,5"
                                VerticalAlignment="Bottom"
                                Focusable="False"
                                Style="{StaticResource AvalonDockToolButtonStyle}">
                                <ctrls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type avalonDockControls:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command" Value="{Binding Path=., Converter={avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </ctrls:DropDownButton.DropDownContextMenu>
                                <Path
                                    x:Name="MenuDropDownButtonImage"
                                    Width="8"
                                    Height="8"
                                    Margin="0,0,0,2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Data="{DynamicResource PinDocMenu}"
                                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonDefaultGlyph}}"
                                    Stretch="Uniform" />
                            </ctrls:DropDownButton>
                        </Grid>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="1,0,1,1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="0"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredBackground}}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredBorder}}" />
                            <Setter TargetName="MenuDropDownButtonImage" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredGlyph}}" />
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedBackground}}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedBorder}}" />
                            <Setter TargetName="MenuDropDownButtonImage" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedGlyph}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabStateLineInactive}}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ShowHeader}" Value="False">
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="1" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedBackground}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedText}}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                                    <Border
                                        x:Name="mainBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorder}}"
                                        BorderThickness="1">
                                        <Border
                                            x:Name="innerBorder"
                                            Margin="-1,-1,-1,0"
                                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorder}}"
                                            BorderThickness="0,2,0,0" />
                                    </Border>
                                    <ContentPresenter
                                        x:Name="Content"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                    <!--  Document Well : Tab / Selected, active  -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedActiveBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderActive}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderActive}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedActiveText}}" />
                                    </DataTrigger>
                                    <!--  Document Well : Tab / Selected, inactive  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False" />
                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedInactiveBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderInactive}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderInactive}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedInactiveText}}" />
                                    </MultiDataTrigger>
                                    <!--  Document Well : Tab / Unselected, hovered  -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedHoveredBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderUnselectedHover}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderUnselectedHover}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedHoveredText}}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <avalonDockControls:DropDownControlArea
                        DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                        DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource DropDownControlArea}">
                        <Border
                            x:Name="Header"
                            Height="23"
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="3" Background="Transparent" />
                                <ContentPresenter
                                    x:Name="Title"
                                    Margin="4,4,0,0"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}"
                                    TextOptions.TextFormattingMode="Display"
                                    TextOptions.TextHintingMode="Auto"
                                    TextOptions.TextRenderingMode="ClearType" />
                                <!--  Close button should be moved out to the container style  -->
                                <Button
                                    x:Name="DocumentCloseButton"
                                    Grid.Column="2"
                                    Width="15"
                                    Height="15"
                                    Margin="4,4,4,2"
                                    Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource AvalonDockButtonStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                    Visibility="Hidden">
                                    <Path
                                        x:Name="PART_PinClose_Image"
                                        Width="10"
                                        Height="10"
                                        Margin="0,1,1,0"
                                        Data="{DynamicResource Path_PinClose}"
                                        Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
                                        Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <!--  Close button visibility  -->
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Title" Property="TextElement.FontWeight" Value="SemiBold" />
                            <Setter TargetName="Title" Property="Margin" Value="4,4,2,0" />

                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--  MainBorder: 17.08.2020 use HideCommand if CanClose=false but CanHide=true  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Command" Value="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="DocumentCloseButton" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" />
                        </MultiDataTrigger>
                        <!--  MainBorder: 17.08.2020 hide button if both CanClose=false and CanHide=false  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active  -->
                        <DataTrigger Binding="{Binding IsActive}" Value="true">
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}" />
                        </DataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered, button hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered, button pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, tab hovered, button pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBackground}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="attach:GlowWindowAttach.GlowMode" Value="ControlzEx" />
        <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBorder}}" />

        <Setter Property="attach:WindowChromeAttach.IsEnabled" Value="True"/>
        <Setter Property="attach:WindowChromeAttach.ResizeBorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border
                            x:Name="WindowBorder" CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="32" />
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition x:Name="MaximizedAddBorder" Height="0" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border
                                    x:Name="Header"
                                    Padding="0,0,0,0"
                                    Background="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarBackground}}"
                                    TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarTextActive}}">
                                    <Grid UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
                                            x:Name="HeaderContent"
                                            Margin="12,4,12,0"
                                            Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarTextActive}}" />
                                        <Button
                                            x:Name="PART_PinMaximize"
                                            Grid.Column="1"
                                            Width="45"
                                            Height="32"
                                            VerticalAlignment="Top"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinMaximize_Image"
                                                Width="9"
                                                Height="9"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource FloatingDocMaximize}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyph}}"
                                                RenderOptions.EdgeMode="Aliased"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinRestore"
                                            Grid.Column="1"
                                            Width="45"
                                            Height="32"
                                            VerticalAlignment="Top"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinRestore_Image"
                                                Width="10"
                                                Height="10"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource FloatingDocRestore}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyph}}"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinClose"
                                            Grid.Column="2"
                                            Width="45"
                                            Height="32"
                                            VerticalAlignment="Top"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDockButtonStyle}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                            <Path
                                                x:Name="PART_PinClose_Image"
                                                Width="10"
                                                Height="10"
                                                VerticalAlignment="Center"
                                                Data="{DynamicResource FloatingDocClose}"
                                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyph}}"
                                                Stretch="Uniform" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    Grid.Row="2"
                                    Margin="6"
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Show Header Bar (Window Title and Restore/Maximize/Minimize buttons with highlighting color if this IsActive)  -->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="7" />
                            <Setter TargetName="MaximizedAddBorder" Property="Height" Value="4" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="False">
                            <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowTitleBarText}}" />
                            <Setter Property="attach:GlowWindowAttach.GlowBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.FloatingDocumentWindowBorderInactive}}" />
                        </DataTrigger>
                        <!--  In VS DocumentFloatingWindow colors change only for header text and icon if window is inactive  -->
                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundHover}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderHover}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphHover}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundHover}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderHover}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphHover}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundHover}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderHover}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphHover}}" />
                        </MultiDataTrigger>
                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundPressed}}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderPressed}}" />
                            <Setter TargetName="PART_PinMaximize_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphPressed}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundPressed}}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderPressed}}" />
                            <Setter TargetName="PART_PinRestore_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphPressed}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBackgroundPressed}}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonBorderPressed}}" />
                            <Setter TargetName="PART_PinClose_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentFloatingWindowSystemButtonGlyphPressed}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveText}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Border
                                x:Name="innerBorder"
                                BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWellInnerBorderInactive}}"
                                BorderThickness="0,2,0,0" />
                        </Border>
                        <Grid Margin="2,4,3,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle
                                x:Name="DragHandleGeometryPlaceholder"
                                Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveGrip}}"
                                Visibility="Collapsed" />
                            <DockPanel>
                                <Border
                                    Padding="2,0,4,0"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Background}">
                                    <avalonDockControls:DropDownControlArea
                                        DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                        DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource DropDownControlArea}">
                                        <ContentPresenter
                                            x:Name="Header"
                                            Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </avalonDockControls:DropDownControlArea>
                                </Border>
                                <Rectangle
                                    x:Name="DragHandleTexture"
                                    Height="5"
                                    Margin="4,0,2,0"
                                    VerticalAlignment="Center"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    UseLayoutRounding="True">
                                    <Rectangle.Fill>
                                        <DrawingBrush
                                            TileMode="Tile"
                                            Viewbox="0,0,4,4"
                                            ViewboxUnits="Absolute"
                                            Viewport="0,0,4,4"
                                            ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing Brush="{Binding Fill, ElementName=DragHandleGeometryPlaceholder, Converter={StaticResource NullToDoNothingConverter}}">
                                                    <GeometryDrawing.Geometry>
                                                        <GeometryGroup>
                                                            <GeometryGroup.Children>
                                                                <RectangleGeometry Rect="0,0,1,1" />
                                                                <RectangleGeometry Rect="2,2,1,1" />
                                                            </GeometryGroup.Children>
                                                        </GeometryGroup>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DockPanel>
                            <ctrls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Width="15"
                                Height="15"
                                Margin="1,1,1,0"
                                VerticalAlignment="Center"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{DynamicResource AvalonDockToolButtonStyle}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                <Path
                                    x:Name="PART_MenuPin_Image"
                                    Width="8"
                                    Height="8"
                                    Margin="0,0,0,1"
                                    Data="{DynamicResource Path_PinMenu}"
                                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                    Stretch="Uniform" />
                            </ctrls:DropDownButton>

                            <Button
                                x:Name="PART_AutoHidePin"
                                Grid.Column="2"
                                Width="15"
                                Height="15"
                                Margin="1,1,1,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{DynamicResource AvalonDockButtonStyle}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                <Path
                                    x:Name="PART_AutoHidePin_Image"
                                    Width="11"
                                    Height="11"
                                    Data="{DynamicResource Path_PinAutoHide}"
                                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    Stretch="Uniform"
                                    UseLayoutRounding="True" />
                            </Button>
                            <Button
                                x:Name="PART_HidePin"
                                Grid.Column="3"
                                Width="15"
                                Height="15"
                                Margin="0,1,1,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{DynamicResource AvalonDockButtonStyle}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                <Path
                                    x:Name="PART_HidePin_Image"
                                    Width="10"
                                    Height="10"
                                    Margin="1,0,0,1"
                                    VerticalAlignment="Center"
                                    Data="{DynamicResource Path_PinClose}"
                                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
                                    Stretch="Uniform" />
                            </Button>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption / Active  -->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveText}}" />
                            <Setter TargetName="DragHandleGeometryPlaceholder" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveGrip}}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWellInnerBorder}}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption : Button / Active  -->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_MenuPin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                            <Setter TargetName="PART_AutoHidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                            <Setter TargetName="PART_HidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption : Button / Active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=MenuDropDownButton}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_MenuPin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_AutoHidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_HidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                            <Setter TargetName="PART_HidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Tool Window : Caption : Button / Inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=MenuDropDownButton}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_MenuPin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_AutoHidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_HidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                            <Setter TargetName="PART_HidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                        </MultiDataTrigger>

                        <!--  Tool Window : Caption : Button / Active / Inactive, pressed  -->
                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_MenuPin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </Trigger>
                        <Trigger SourceName="PART_AutoHidePin" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_AutoHidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </Trigger>
                        <Trigger SourceName="PART_HidePin" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                            <Setter TargetName="PART_HidePin_Image" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
